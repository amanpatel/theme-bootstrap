$input-icon-color: $grey;
$input-left-icon-padding: 7px 11px 7px 32px;
// $input-left-icon-padding: .4rem .8rem .4rem 2rem;
$input-left-icon-padding-large: 7px 11px 7px 45px;
$input-icon-position-left-right: 12px;
$input-rounded: 50px!important;
$input-margin-right: 0.5rem;
$btn-border-color: #ced4da;

/* IMPORTANT NOTE !!
.input-group --> // Addons class
.input-grouped --> // Grouped class
*/

// border radius for input group
.input-group {
    .input {
    	// the first and the last inputs should be rounded
        &:first-child {
            .form-control {
                border-bottom-right-radius: 0;
                border-top-right-radius: 0;
            }
        }
        &:last-child {
            .form-control {
                border-bottom-left-radius: 0;
                border-top-left-radius: 0;
            }
        }
        // The input in middle shouldn't be rounded
        &:not(:first-child):not(:last-child) {
            .form-control {
                border-radius: 0;
                border-radius: 0;
            }
        }
        // The input is first and the last
        &:first-child:last-child {
            .form-control {
                border-radius: 3px;
                border-radius: 3px;
            }
        }
    }
    // Button
    // Dropdown
    .dropdown {
        &:first-child {
            .dropdown-trigger {
                .btn {
                    border-bottom-right-radius: 0;
                    border-top-right-radius: 0;
                }
            }
        }
        &:last-child {
            .dropdown-trigger {
                .btn {
                    border-bottom-left-radius: 0;
                    border-top-left-radius: 0;
                }
            }
        }
        // The dropdown in middle shouldn't be rounded
        &:not(:first-child):not(:last-child) {
            .dropdown-trigger {
                .btn {
                    border-radius: 0;
                    border-radius: 0;
                }
            }
        }
        // The input is first and the last
        &:first-child:last-child {
            .form-control {
                border-radius: 3px;
                border-radius: 3px;
            }
        }
    }    
    // Select    
    .select {
       // the first and the last inputs should be rounded
        &:first-child {
            .form-select {
                border-bottom-right-radius: 0;
                border-top-right-radius: 0;
            }
        }
        &:last-child {
            .form-select {
                border-bottom-left-radius: 0;
                border-top-left-radius: 0;
            }
        }
        // The select in middle shouldn't be rounded
        &:not(:first-child):not(:last-child) {
            .form-select {
                border-radius: 0;
                border-radius: 0;
            }
        }
        // The input is first and the last
        &:first-child:last-child {
            .form-control {
                border-radius: 3px;
                border-radius: 3px;
            }
        }
    }
    // If the input and button are wrapped inside divs
    // div:first-child {
    //     .btn {
    //         border-bottom-right-radius: 0;
    //         border-top-right-radius: 0;
    //     }
    //     .input {
    //         border-bottom-right-radius: 0;
    //         border-top-right-radius: 0;
    //     }
    // }
    // div:last-child {
    //     .btn {
    //         border-bottom-left-radius: 0;
    //         border-top-left-radius: 0;
    //     }
    //     .input {
    //         border-bottom-left-radius: 0;
    //         border-top-left-radius: 0;
    //     }
    // }
    // div:not(:first-child):not(:last-child) {
    //     .btn {
    //         border-radius: 0;
    //         border-radius: 0;
    //     }
    //     .input {
    //         border-radius: 0;
    //         border-radius: 0;
    //     }
    // }
}

// Icon style
.input {
    position: relative;
    
    // Space for the icon
    .form-control {
        // if the icon is in left then set that padding
        &.has-icon-in-left:not(.form-control-lg) {
            padding: $input-left-icon-padding;
        } // if icon and the input are large, we give more space to icon
        &.has-icon-in-left.form-control-lg {
            padding: $input-left-icon-padding-large;
        }
    }
    // the Position of the icon
    .icon {
        color: $input-icon-color;
        position: absolute;
        &.is-left {
            top: 8px;
            left: $input-icon-position-left-right;
        }
        &.is-right {
            top: 8px;
            right: $input-icon-position-left-right;
        }
        // small icon positioniing
        &.is-left.is-small {
            top: 6px;
            left: $input-icon-position-left-right;
        }
        &.is-right.is-small {
            top: 6px;
            right: $input-icon-position-left-right;
        }
    }

}

.input-group {
    flex-shrink: 0;
    .input, .select {
        &.is-expanded {
            flex-grow: 1;
            flex-shrink: 1;
        }
    }

     // Without margin
    .input, .select , .btn {
        margin: 0!important;
    }
    // Btn with border if it transparent <outlined>
    button:not(.btn-primary):not(.btn-info):not(.btn-danger):not(.btn-success):not(.btn-warning):not(.btn-dark):not(.btn-light) {
        border: .1px solid $btn-border-color;
        background-color: $btn-border-color;
    }
}

.input-field {
    margin-bottom: 0.75rem;

    .input-grouped {
        display: flex;
        .input, .select {
            &.is-expanded {
                flex-grow: 1;
                flex-shrink: 1;
            }
        }
        // Margin right
        .input:not(:last-child), .select:not(:last-child), .dropdown:not(:last-child), button:not(:last-child) {
            margin-right: $input-margin-right;
        }
        .input-field:not(:last-child) {
            margin-right: $input-margin-right;
        }
    }
    // counter
    .counter {
    	position: absolute;
    	right: 0;
    }
    
    // Rounded
    .form-control, .form-select {
        &.is-rounded {
            border-radius: $input-rounded;
        }
    }
    // Fullwidth
    .input, .select {
        flex-shrink: 0;
        &.is-fullwidth {
            flex-grow:1;
            flex-shrink: 1;
        }
    }
}